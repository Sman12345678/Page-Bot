from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
train_data = [
 
    ("create an image of a double exposure forest and wolf", "generate_image"),
    ("generate a futuristic city skyline at night", "generate_image"),
    ("draw a surreal double exposure of a dancer and city lights", "generate_image"),
    ("image a cyberpunk style image of a neon-lit street", "generate_image"),
    ("make a double exposure of a mountain and stars", "generate_image"),
    ("render a fantasy dragon flying over a castle", "generate_image"),
    ("picture an abstract image of swirling colors", "generate_image"),
    ("create a minimalist bird in flight", "generate_image"),
    ("generate a digital painting of a futuristic robot", "generate_image"),
    ("draw a double exposure of a tree and galaxy", "generate_image"),
    ("create a vibrant image of an underwater coral reef", "generate_image"),
    ("make a sci-fi landscape with floating islands", "generate_image"),
    ("render a dark fantasy haunted forest", "generate_image"),
    ("create an artistic image of sound waves in motion", "generate_image"),
    ("generate a double exposure of a lion and desert sunset", "generate_image"),
    ("draw digital art of a futuristic vehicle", "generate_image"),
    ("create a colorful butterfly with glowing wings", "generate_image"),
    ("make a cyberpunk portrait of a person with neon tattoos", "generate_image"),
    ("render a double exposure of a cityscape and roaring ocean", "generate_image"),
    ("create a fantasy wizard casting spells", "generate_image"),
    ("create a hyper-realistic image of a roaring tiger", "generate_image"),
    ("generate a cartoon image of a smiling robot", "generate_image"),
    ("draw a watercolor painting of a peaceful lake", "generate_image"),
    ("create a night sky with shooting stars and planets", "generate_image"),
    ("make a digital art portrait of a futuristic astronaut", "generate_image"),
    ("render a vibrant street art mural with graffiti", "generate_image"),
    ("create a 3D render of a vintage car", "generate_image"),
    ("generate a double exposure of a face and city skyline", "generate_image"),
    ("draw a detailed sketch of an old library", "generate_image"),
    ("create an impressionist painting of a flower garden", "generate_image"),
    ("make a pixel art image of a fantasy castle", "generate_image"),
    ("render a surreal digital collage of ocean waves", "generate_image"),
    ("imagine an image of steampunk style illustration of a mechanical bird", "generate_image"),
    ("generate a bright and colorful image of a tropical beach", "generate_image"),
    ("draw a comic book cover featuring superheroes", "generate_image"),
    ("imagine a photo-realistic image of a snow-covered mountain", "generate_image"),
    ("make a silhouette image of a tree during sunset", "generate_image"),
    ("render an abstract painting with bold brush strokes", "generate_image"),
    ("create an image of a dragon breathing fire", "generate_image"),
    ("generate a digital portrait of a historical figure", "generate_image"),
    ("draw a fantasy landscape with floating islands and castles", "generate_image"),
    ("create a monochrome image of a vintage motorcycle", "generate_image"),
    ("make an animated GIF of a dancing robot", "generate_image"),
    ("render a sci-fi battle scene with spaceships", "generate_image"),
    ("create a minimalist line art of a cat", "generate_image"),
    ("generate a pixelated image of a retro video game scene", "generate_image"),
    ("draw a comic strip of a funny animal adventure", "generate_image"),
    ("create an image of hyper-detailed image of a futuristic city", "generate_image"),
    ("make a digital sculpture of an abstract human face", "generate_image"),
    ("render a cartoon image of a jungle safari", "generate_image"),
    ("create a colorful digital collage of flowers and birds", "generate_image"),
    ("generate a fantasy creature with wings and horns", "generate_image"),
    ("draw an oil painting style image of a classic car", "generate_image"),
    ("create a magical forest scene with glowing plants", "generate_image"),
    ("make a 3D model render of a spaceship", "generate_image"),
    ("render a watercolor portrait of a smiling child", "generate_image"),
    ("create a graphic novel style image of a detective", "generate_image"),
    ("generate a futuristic image of a robot city at dawn", "generate_image"),
    ("draw a surreal image of a floating island with waterfalls", "generate_image"),
    ("create an image featuring a retro-style poster of a jazz concert", "generate_image"),

    # image_search intent (focused on finding existing images)
    ("find me images of cats", "image_search"),
    ("search for pictures of mountains", "image_search"),
    ("look up photos of the Eiffel Tower", "image_search"),
    ("show me pictures of vintage cars", "image_search"),
    ("find photos of cute puppies", "image_search"),
    ("search for images of space exploration", "image_search"),
    ("look for pictures of autumn forests", "image_search"),
    ("find images of famous landmarks", "image_search"),
    ("search for pictures of tropical beaches", "image_search"),
    ("show photos of historical buildings", "image_search"),
    ("find me artwork of futuristic cities", "image_search"),
    ("look up pictures of rare birds", "image_search"),
    ("search images of beautiful sunsets", "image_search"),
    ("show photos of ancient ruins", "image_search"),
    ("find pictures of colorful butterflies", "image_search"),
    ("show me a picture of the sunset", "image_search"),
    ("show me a picture from the internet", "image_search"),
    # general_chat intent (including some image-related distractors)
    ("how are you?", "general_chat"),
    ("what's the weather?", "general_chat"),
    ("tell me a joke", "general_chat"),
    ("create a poem", "general_chat"),
    ("can you generate a random image?", "general_chat"),
    ("can you raw something funny for me", "general_chat"),
    ("can you show me a picture from the internet", "general_chat"),
    ("can you create a quick sketch?", "general_chat"),
    ("can you give me a photo of a cat", "general_chat"),
    ("can you make a drawing?", "general_chat"),
    ("who is the president?", "general_chat"),
    ("explain quantum physics", "general_chat"),
    ("what time is it?", "general_chat"),
    ("how do I cook rice?", "general_chat"),
    ("where is the nearest restaurant?", "general_chat"),
    ("what's the capital of France?", "general_chat"),
    ("can you help me with my homework?", "general_chat"),
    ("tell me the news", "general_chat"),
    ("what is the meaning of life?", "general_chat"),
    ("define artificial intelligence", "general_chat"),
    ("translate hello to Spanish", "general_chat"),
    ("what is 2 plus 2?", "general_chat"),
    ("how do I change a tire?", "general_chat"),
    ("recommend a movie", "general_chat"),
    ("who won the game last night?", "general_chat"),
    ("what's your name?", "general_chat"),
    ("how old are you?", "general_chat"),
    ("what do you think about technology?", "general_chat"),
    ("can you tell me a fun fact?", "general_chat"),
    ("what's your favorite color?", "general_chat"),
    ("how do I improve my memory?", "general_chat"),
    ("explain how rainbows are formed", "general_chat"),
    ("who invented the telephone?", "general_chat"),
    ("what's your favorite movie?", "general_chat"),
    ("how can I be more productive?", "general_chat"),
    ("what's the best way to learn Python?", "general_chat"),
    ("what is the tallest building in the world?", "general_chat"),
    ("how do airplanes fly?", "general_chat"),
    ("can you recommend a good book?", "general_chat"),
    ("tell me a riddle", "general_chat"),
    ("what's your favorite animal?", "general_chat"),
    ("how do you stay motivated?", "general_chat"),
    ("what is climate change?", "general_chat"),
    ("who painted the Mona Lisa?", "general_chat"),
    ("what is your purpose?", "general_chat"),
    ("how can I learn to play guitar?", "general_chat"),
    ("what is artificial intelligence used for?", "general_chat"),
    ("what's the largest ocean on Earth?", "general_chat"),
    ("what are black holes?", "general_chat"),
    ("why is the sky blue?", "general_chat"),
    ("how do I make pancakes?", "general_chat"),
    ("what is the speed of light?", "general_chat"),
    ("who wrote Harry Potter?", "general_chat"),
    ("what's the population of the world?", "general_chat"),
    ("can you explain photosynthesis?", "general_chat"),
    ("what is your favorite food?", "general_chat"),
]
class SmallIntentClassifier:
    def __init__(self):
        self.vectorizer = TfidfVectorizer()
        self.model = LogisticRegression()
        self._train()

    def _train(self):
        texts, intents = zip(*train_data)
        X = self.vectorizer.fit_transform(texts)
        self.model.fit(X, intents)

    def predict_intent(self, text):
        X = self.vectorizer.transform([text])
        return self.model.predict(X)[0]

classifier = SmallIntentClassifier()
